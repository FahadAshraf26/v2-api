# Stage 1: Builder
FROM node:22-alpine AS builder

# Set corepack home for caching
ENV COREPACK_HOME="/tmp/.corepack"

# Enable pnpm and prepare it, which will cache it in COREPACK_HOME
RUN corepack enable && corepack prepare pnpm@10.3.0 --activate

WORKDIR /app

# Copy package files and install all dependencies (including dev)
COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build TypeScript
RUN pnpm run build

# Stage 2: Runner
FROM node:22-alpine AS runner

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# The base node alpine image comes with a "node" user. We'll use that.
# Create and set permissions for the cache directory for the "node" user.
RUN mkdir -p /home/node/.cache/node/corepack/v1 && \
    chown -R node:node /home/node/.cache && \
    mkdir -p /tmp/.corepack/v1 && \
    chown -R node:node /tmp/.corepack

# Enable pnpm
RUN corepack enable && corepack prepare pnpm@10.3.0 --activate

WORKDIR /app

# Copy the prepared corepack cache from the builder stage
COPY --from=builder --chown=node:node /tmp/.corepack /tmp/.corepack

# Copy production dependencies from builder stage
COPY --from=builder --chown=node:node /app/node_modules ./node_modules

# Copy built application from builder stage
COPY --from=builder --chown=node:node /app/dist ./dist
COPY --from=builder --chown=node:node /app/package.json ./package.json

# Switch to non-root user
USER node

# Expose port
EXPOSE 8082

# Health check
# HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
#     CMD node -e "require('http').get('http://localhost:8082/health', (r) => r.statusCode === 200 ? process.exit(0) : process.exit(1))"

# Set Corepack home to the copied cache directory
ENV COREPACK_HOME="/tmp/.corepack"
# Set production environment
ENV NODE_ENV=production
ENV NODE_OPTIONS="--max-old-space-size=2048 --enable-source-maps"

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["node", "dist/server.js"]
