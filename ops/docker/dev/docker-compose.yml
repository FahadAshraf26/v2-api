services:
  # API V2 Service
  api-v2:
    build:
      context: ../../../
      dockerfile: ops/docker/dev/dockerfile
    container_name: honeycomb-api-v2-dev
    ports:
      - '${PORT:-8082}:${PORT:-8082}'
    volumes:
      # Mount source code for hot-reload
      - ../../../src:/app/src
      - ../../../package.json:/app/package.json
      - ../../../tsconfig.json:/app/tsconfig.json
      # Use named volume for node_modules
      - node_modules:/app/node_modules
    env_file:
      - ../../../.env
    environment:
      # Override only network-specific settings
      DB_HOST: mysql
      REDIS_HOST: redis
      HOST: 0.0.0.0
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - honeycomb-network
    # Run install and then start the dev server
    command: ['sh', '-c', 'pnpm install && pnpm run dev']
    restart: on-failure:10

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: honeycomb-mysql-dev
    ports:
      - '${DB_PORT:-3306}:3306'
    environment:
      # Use root password from env or default
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-honeycomb_dev_password}
      MYSQL_DATABASE: ${DB_NAME:-honeycomb_v2_dev}
      MYSQL_USER: ${DB_USERNAME:-honeycomb}
      MYSQL_PASSWORD: ${DB_PASSWORD:-honeycomb_dev_password}
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '--silent']
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 40s
    networks:
      - honeycomb-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: honeycomb-redis-dev
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_data:/data
    networks:
      - honeycomb-network
    restart: unless-stopped

  # Adminer (Database Management)
  adminer:
    image: adminer:latest
    container_name: honeycomb-adminer
    ports:
      - '8080:8080'
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DESIGN: pepa-linha
    networks:
      - honeycomb-network
    depends_on:
      - mysql

volumes:
  node_modules:
  mysql_data:
  redis_data:

networks:
  honeycomb-network:
    driver: bridge
    name: honeycomb-dev-network
